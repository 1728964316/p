#include <iostream>
#include <string>
using namespace std;

bool is_valid(string s) {
    // 判断字符串是否只包含 P, A, T 三种字符
    for (char c : s) {
        if (c != 'P' && c != 'A' && c != 'T') {
            return false;
        }
    }
    // 判断字符串是否满足 xPATx 的形式，其中 x 是空字符串或由 A 组成的字符串
    int p = s.find('P'); // P 的位置
    int t = s.find('T'); // T 的位置
    if (p == string::npos || t == string::npos || p > t) {
        return false;
    }
    string a = s.substr(0, p); // P 前面的字符串
    string b = s.substr(p + 1, t - p - 1); // P 和 T 之间的字符串
    string c = s.substr(t + 1); // T 后面的字符串
    if (b.empty()) {
        return false; // P 和 T 相邻，不符合条件
    }
    if (a == b && b == c) {
        return true; // 字符串是 PAT 的形式
    }
    // 判断字符串是否满足 aPbTc 的形式，其中 a, b, c 是空字符串或由 A 组成的字符串
    // 并且满足 aPbATca 的形式，即 c 的长度等于 a 的长度乘以 b 的长度
    if (c.length() == a.length() * b.length()) {
        return true;
    }
    return false;
}

int main() {
    int n; // 测试用例的个数
    cin >> n;
    while (n--) {
        string s; // 待检测的字符串
        cin >> s;
        if (is_valid(s)) {
            cout << "YES" << endl; // 字符串可以获得答案正确
        } else {
            cout << "NO" << endl; // 字符串不可以获得答案正确
        }
    }
    return 0;
}
